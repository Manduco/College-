//Armando Zincke
//COP2535.DM1  
//Short description of what your project will do

#include "pch.h"//why
#include <array>
#include <iostream>
#include <fstream> //Stream class to both read and write from/to files.

using namespace std;



int bubbleSort(int Array[]);
int selec_sort(int Arraydeux[]);
int linear_Search(int Array[]);
int Binary_Search(int Arraydeux[]);


int main()
{
	int Nums;
	int Array[200];
	int Arraydeux[200];
	int n = 0;

	ifstream File;//file name
	File.open("random.txt");// Open the output file
	cout << "Numbers in file are: \n";


	// reads file until end
	while (!File.eof())
	{
		File >> Array[n];
		n++;
	}
	File.close();// Close the file

	for (int x = 0; x < 200; x++) {
		Arraydeux[x] = Array[x];
	}// assign vaules of array1 to array2

	//-----------------cout to test an array-----------------------
	//cout << Array[199]<< endl;//testing that reads into the array
	//cout << Arraydeux[199] << endl;


	
	bubbleSort(Array);//calling bubble sort function for array1
	selec_sort(Arraydeux);
	linear_Search(Array);
	Binary_Search(Arraydeux);
	

	return 0;
}//end of main


int bubbleSort(int a1[]) {

	int swap_Count = 0;
	int loading = 0;

	for (int i = 1; i < 200; ++i)
	{
		for (int j = 0; j < (200 - i); ++j)
			if (a1[j] > a1[j + 1])
			{
				int temp = a1[j];
				a1[j] = a1[j + 1];
				a1[j + 1] = temp;
				swap_Count++;
			}
	}

	for (int n = 0; n < 200; n++) {
		cout << a1[n] << endl;
	}//displays of array1
	cout << "----Bubble Sort----\n";
	cout << "----with Array1----\n";
	cout << "Numbers of swaps made are: "<< "\"" << swap_Count <<"\""<< "\n";
	cout << "---------------------" << endl;
	

	system("pause");
	return 0;
}
int selec_sort(int a2[]) {
	
	int i, j, minIndex, tmp;
	int Swaps = 0;

	for (i = 0; i < 200 - 1; i++) {
		minIndex = i;
		for (j = i + 1; j < 200; j++){
			if (a2[j] < a2[minIndex]){
				minIndex = j;
			}
		}		
		if (minIndex != i) {

			tmp = a2[i];

			a2[i] = a2[minIndex];

			a2[minIndex] = tmp;
			Swaps++;
		}
	}


	for (int n = 0; n < 200; n++) {
		cout << a2[n] << endl; //displays of array2
	}
	cout << "\n";
	cout << "----select sort----\n";
	cout << "----with Array2----\n";
	cout << "Numbers of swaps made :  "<<  "\""<< Swaps << "\"" << "\n";
	cout << "---------------------" << endl;

	system("pause");
	return 0;
}
int linear_Search(int SearchArray1[]) {

	int NumToFind = 869;
	int NumberofComparisons = 0;
	
	for (int x = 0; x < 200; x++) {

		if ( SearchArray1[x] == NumToFind){
		
			cout << "Found ya ! \n";
			NumberofComparisons++;
			break;
		}
	
	
		NumberofComparisons++;
	}
	cout << "\n";
	cout << "----linear Search----\n";
	cout << "---- on Array1 ----\n";
	cout << "A linear Search made "<< "\"" << NumberofComparisons<< "\"" " comparisons \n";
	cout << "---------------------" << endl;

	system("pause");
	return 0;
}
int Binary_Search(int SearchArray2[]){
	int NumToFind = 869;
	int median = SearchArray2[99];
	int NumberofComparisons = 0;

	cout << "\n";
	cout << "----Binary Search----\n";

	if (NumToFind == median) {
		cout << "Found in the middle \n";
	}
	else {
		cout << "Not in the middle \n";
		NumberofComparisons++;

		for (int n = 0; n < 100; n++) {
			//cout << SearchArray2[n] << endl;//displays of array1
			if (SearchArray2[n] == NumToFind) {
				cout << "Found! \n";
				cout << "Number was located in posisition " << n << "\n";
				break;
			}
			else { NumberofComparisons++; }
		}//left side search

		for (int n = 99; n < 200; n++) {
			//cout << SearchArray2[n] << endl;//displays of array1
			if (SearchArray2[n] == NumToFind) {
				cout << "Found! \n";
				cout << "Number was located in posisition " << n <<"\n";
				
				break;
			}
			else {  NumberofComparisons++; }
		}//right side search
	
	}

	cout << "----Binary Search----\n";
	cout << "---- on Array2 ----\n";
	cout << SearchArray2[169] << " found\n";
	cout << "A Binary Search made " << "\"" << NumberofComparisons<< "\"" " comparisons\n";
	cout << "---------------------" << endl;
	system("pause");
	
  return 0;
}
